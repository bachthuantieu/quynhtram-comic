import { IComicDetails } from "@types";
import { IconHeart, IconShare } from "components/Icons";
import Image from "components/Image";
import { WrapLink } from "components/link";
import { PATH } from "constants/path";
import { collection, onSnapshot, query, where } from "firebase/firestore";
import LayoutHome from "layouts";
import { db } from "libs/firebase-app";
import ComicTitle from "modules/ComicTitle";
import Heading from "modules/Heading";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";

const features = [
  {
    id: 1,
    poster: "https://cn-e-pic.mangatoon.mobi/cartoon-posters/1005142f6a3.webp",
    title: "Thiên Tài Khốc Bảo: Tổng Tài Cuồng Sủng Thê"
  },
  {
    id: 2,
    poster: "https://cn-e-pic.mangatoon.mobi/cartoon-posters/1005142f6a3.webp",
    title: "Kính Chào Nữ Vương Đại Nhân"
  },
  {
    id: 3,
    poster: "https://cn-e-pic.mangatoon.mobi/cartoon-posters/4509188159.webp",
    title: "Bá Đạo Tổng Tài Nhẹ Nhàng Yêu"
  },
  {
    id: 4,
    poster: "https://cn-e-pic.mangatoon.mobi/cartoon-posters/1005142f6a3.webp",
    title: "Thiên Tài Khốc Bảo: Tổng Tài Cuồng Sủng Thê"
  },
  {
    id: 5,
    poster: "https://cn-e-pic.mangatoon.mobi/cartoon-posters/1005142f6a3.webp",
    title: "Kính Chào Nữ Vương Đại Nhân"
  },
  {
    id: 6,
    poster: "https://cn-e-pic.mangatoon.mobi/cartoon-posters/4509188159.webp",
    title: "Bá Đạo Tổng Tài Nhẹ Nhàng Yêu"
  }
];

const Button = ({ children }: { children: React.ReactNode }) => {
  return (
    <button
      type="button"
      className="flex items-center h-12 gap-[6px] px-5 font-semibold text-redff4 rounded-[100px] border border-redff4"
    >
      {children}
    </button>
  );
};

const ComicDetailsPage = () => {
  const router = useRouter();
  const slug = router.query?.slug as string;
  const [comicDetails, setComicDetails] = useState<IComicDetails | null>(null);
  console.log("comicDetails: ", comicDetails);
  useEffect(() => {
    async function fetchDetailsComic() {
      if (!slug) return;
      const colRef = query(collection(db, "comics"), where("slug", "==", slug));
      onSnapshot(colRef, (snapshot) => {
        snapshot.forEach((doc: any) => {
          doc.data() &&
            setComicDetails({
              id: doc.id,
              ...doc.data()
            });
        });
      });
    }
    fetchDetailsComic();
  }, [slug]);
  if (!comicDetails) return null;
  return (
    <>
      <Head>
        <title>Tổng Tài Tại Thượng</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LayoutHome>
        <div className="layout-container">
          <section className="flex flex-col gap-10 pt-10 md:flex-row">
            <WrapLink className="bg-[#999999] rounded-lg overflow-hidden mx-auto md:shrink-0">
              <Image
                alt={comicDetails.title}
                src={comicDetails.poster}
                className="aspect-[260/345] object-cover w-[200px] md:w-[260px]"
              />
            </WrapLink>
            <div>
              <h1 className="inline-block text-2xl font-bold text-dark33">{comicDetails.title}</h1>
              <span className="inline-block mt-1 text-sm line-clamp-1 text-gray88">
                {comicDetails.categories.map((category, index) => {
                  if (comicDetails.categories.length === index + 1) return category;
                  return `${category} / `;
                })}
              </span>
              <div className="flex items-center gap-2 mt-3">
                <div className="flex items-center text-[#FFBD4F]">
                  {Array(5)
                    .fill(0)
                    .map((item, index) => (
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        className="w-5 h-5"
                        viewBox="0 0 20 20"
                        fill="currentColor"
                        key={index}
                      >
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                      </svg>
                    ))}
                </div>
                <span className="font-medium text-gray88">{comicDetails.rating}</span>
              </div>
              <p className="pt-3 text-sm text-gray88 md:text-base">{comicDetails.description}</p>
            </div>
          </section>
          <div className="flex items-center gap-5 my-4">
            <button
              type="button"
              className="h-12 px-5 font-semibold text-white rounded-[100px] bg-redff4"
            >
              Xem từ đầu
            </button>
            <Button>
              <IconHeart />
              <span>Theo dõi</span>
            </Button>
            <Button>
              <IconShare />
              <span>Chia sẻ</span>
            </Button>
          </div>
          <section className="">
            <div className="py-3 flex items-center gap-3 border-b border-[#00000033]">
              <h3 className="text-xl font-semibold text-redff4">Chapter</h3>
              <span className="text-gray88">Đã cập nhật {comicDetails.chapters.length} chương</span>
            </div>
            <div className="mt-5 chapter-list">
              {comicDetails.chapters.map((chapter) => (
                <WrapLink
                  key={chapter.id}
                  href={`${PATH.comicDetails}/${slug}/${chapter.id}`}
                  className="bg-[#f8f8f8] flex items-center p-3 justify-between rounded-lg"
                >
                  <span>{chapter.name}</span>
                  <span className="text-gray88">
                    {new Date(chapter.createdAt.seconds * 1000).toLocaleDateString("vi-VI")}
                  </span>
                </WrapLink>
              ))}
            </div>
          </section>
          <section className="mt-8">
            <Heading>Truyện liên quan</Heading>
            <div className="pt-4 comic-list">
              {features.map((comic) => (
                <div key={comic.id}>
                  <WrapLink className="bg-[#999999]">
                    <Image
                      src={comic.poster}
                      alt={comic.title}
                      className="rounded aspect-[175/233]"
                    />
                  </WrapLink>
                  <ComicTitle>{comic.title}</ComicTitle>
                </div>
              ))}
            </div>
          </section>
        </div>
      </LayoutHome>
    </>
  );
};

export default ComicDetailsPage;
